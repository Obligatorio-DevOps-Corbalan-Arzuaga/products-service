name: ci products service

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - staging
      - main

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest

    env:
      ECR_REPOSITORY: products-service 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Analisis SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.organization=obligatorio-devops-corbalan-arzuaga
            -Dsonar.projectKey=Obligatorio-DevOps-Corbalan-Arzuaga_products-service
            -Dsonar.sources=.
            -Dsonar.java.binaries=target/classes
            -Dsonar.exclusions=**/node_modules/**
            -Dsonar.branch.name=${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
            -Dsonar.verbose=true
        continue-on-error: false
  
      - name: Verificar resultados del anÃ¡lisis en SonarCloud
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
  
      - name: Mostrar el estado del Quality Gate
        run: |
         echo "El estado del Quality Gate es: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1 
 
      - name: Login to Amazon ECR
        run: |
           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}
 
      - name: Build Docker image
        run: |
           CLEAN_REF_NAME=$(echo "${{ github.ref_name }}" | sed 's|/|-|g')
           IMAGE_TAG=$(date +%Y%m%d%H%M%S)-$CLEAN_REF_NAME
           docker build -t ${{ secrets.ECR_URI }}:$IMAGE_TAG .
           echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
 
      - name: Push Docker image to ECR
        run: |
           docker push ${{ secrets.ECR_URI }}:${{ env.IMAGE_TAG }}
 
      - name: Verify image in ECR
        run: |
           aws ecr describe-images \
             --repository-name products-service \
             --region ${{ secrets.AWS_REGION }} \
             --query 'imageDetails[?imageTags[0]==`'${{ env.IMAGE_TAG }}`]' \
             --output json